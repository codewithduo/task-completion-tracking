generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String    @db.Text
  userEmail   String    @map("user_email") @db.VarChar(255)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  taskSolving   TaskSolving?
  taskOverview  TaskOverview?
  taskEdgeCases TaskEdgeCase[]

  @@map("tasks")
}

model TaskOverview {
  id              Int     @id @default(autoincrement())
  taskId          Int     @unique @map("task_id")
  userInterface   String? @map("user_interface") @db.Text
  taskBehavior    String? @map("task_behavior") @db.Text
  taskInteraction String? @map("task_interaction") @db.Text

  task Task @relation(fields: [taskId], references: [id])

  @@map("task_overviews")
}

model TaskEdgeCase {
  id       Int    @id @default(autoincrement())
  taskId   Int    @map("task_id")
  name     String @db.Text
  solution String @db.Text

  task Task @relation(fields: [taskId], references: [id])

  @@map("task_edge_cases")
}

model TaskSolving {
  id              Int     @id @default(autoincrement())
  taskId          Int     @unique @map("task_id")
  taskScope       String?  @map("task_scope") @db.Text
  taskContext     String?  @map("task_context") @db.Text
  optimalSolution String?  @map("optimal_solution") @db.Text
  isNeedPoc       Boolean @default(false)

  task Task @relation(fields: [taskId], references: [id])

  @@map("task_solving")
}
